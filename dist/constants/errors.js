"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERROR_CANNOT_USER = exports.ERROR_BLOCKING = exports.ERROR_NO_MONEY = exports.ERROR_TRANSACTION = exports.ERROR_CATEGORY = exports.ERROR_UNHANDLER = exports.ERROR_USER_BLOCK = exports.ERR_USER_ROLE = exports.ERR_ROLE = exports.ERR_CHECK_AUT = exports.ERR_AUTH = exports.ERR_REGISTER = exports.ERR_LOGIN = exports.ERR_PASSWORD = exports.ERR_NOT_USER = exports.ERR_ID = exports.ERR_HANDLER = exports.ERR_BET_UNAVAIBLE = void 0;
exports.ERR_BET_UNAVAIBLE = "Error: The Bet is not available";
exports.ERR_HANDLER = "Error: Handler error";
exports.ERR_ID = "The ID entered is invalid";
exports.ERR_NOT_USER = "User not found";
exports.ERR_PASSWORD = "Invalid password";
exports.ERR_LOGIN = "An error occurred during login";
exports.ERR_REGISTER = "An error occurred during register";
exports.ERR_AUTH = "An error ocurred with your token";
exports.ERR_CHECK_AUT = "An error ocurred checking your auth";
exports.ERR_ROLE = "You don't have the permission to do execute this function";
exports.ERR_USER_ROLE = "The users isn't a administrator";
exports.ERROR_USER_BLOCK = "The users is block";
exports.ERROR_UNHANDLER = "Unhandler Error";
exports.ERROR_CATEGORY = "INVALIDAD CATEGORY TYPE";
exports.ERROR_TRANSACTION = "Error: getting the transactions to make the balance";
exports.ERROR_NO_MONEY = "User doesn't have enough money to do the transaction";
exports.ERROR_BLOCKING = "Cannot Block a Administrator User";
exports.ERROR_CANNOT_USER = "You can not modificate the User";
